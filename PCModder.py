# ba_meta require api 6
# (see https://ballistica.net/wiki/meta-tag-system)
#made by the PCModder/PC231392/Avarohana
#thanks to Blitz and ByAngel3l
#this was made through ByAngel3L Bunny Plugin
#Thanks to God

import base64
text= b'ZnJvbSBfX2Z1dHVyZV9fIGltcG9ydCBhbm5vdGF0aW9ucwpmcm9tIHR5cGluZyBpbXBvcnQgVFlQRV9DSEVDS0lORwoKaW1wb3J0IGJhCmltcG9ydCBfYmEKaW1wb3J0IHJhbmRvbQppbXBvcnQgd2Vha3JlZgpmcm9tIGJhIGltcG9ydCBpbnRlcm5hbApmcm9tIGJhc3RkLmFjdG9yIGltcG9ydCBwb3dlcnVwYm94CmZyb20gYmFzdGQuYWN0b3IucG93ZXJ1cGJveCBpbXBvcnQgKF9Ub3VjaGVkTWVzc2FnZSwgUG93ZXJ1cEJveEZhY3RvcnksCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIERFRkFVTFRfUE9XRVJVUF9JTlRFUlZBTCkKZnJvbSBiYXN0ZC5nYW1ldXRpbHMgaW1wb3J0IFNoYXJlZE9iamVjdHMKZnJvbSBiYXN0ZC5hY3Rvci5zcGF6Ym90IGltcG9ydCBTcGF6Qm90LCBTcGF6Qm90U2V0CmZyb20gYmFzdGQuYWN0b3IucGxheWVyc3BheiBpbXBvcnQgUGxheWVyU3Bhegpmcm9tIGJhc3RkLmFjdG9yLnNwYXogaW1wb3J0IFNwYXoKZnJvbSBiYS5fZ2FtZWFjdGl2aXR5IGltcG9ydCBHYW1lQWN0aXZpdHkKZnJvbSBfYmEgaW1wb3J0IGNoYXRtZXNzYWdlIGFzIGNtc2csIGdldF9mb3JlZ3JvdW5kX2hvc3RfYWN0aXZpdHkKZnJvbSBiYXN0ZC5hY3RvciBpbXBvcnQgYm9tYiBhcyBzdGRib21iCmltcG9ydCBmaXJlCgppZiBUWVBFX0NIRUNLSU5HOgogICAgZnJvbSB0eXBpbmcgaW1wb3J0IExpc3QsIEFueSwgT3B0aW9uYWwsIFNlcXVlbmNlCgoKY2xhc3MgTmV3UG93ZXJ1cEJveChiYS5BY3Rvcik6CiAgICBkZWYgX19pbml0X18oc2VsZiwKICAgICAgICAgICAgICAgICBwb3NpdGlvbjogU2VxdWVuY2VbZmxvYXRdID0gKDAuMCwgMS4wLCAwLjApLAogICAgICAgICAgICAgICAgIHBvd2VydXB0eXBlOiBzdHIgPSAndHJpcGxlX2JvbWJzJywjbGUgUENNb2RkZXIgd2FzIGhlcmUKICAgICAgICAgICAgICAgICBleHBpcmU6IGJvb2wgPSBUcnVlKToKICAgICAgICBzdXBlcigpLl9faW5pdF9fKCkKICAgICAgICBzaGFyZWQgPSBTaGFyZWRPYmplY3RzLmdldCgpCiAgICAgICAgZmFjdG9yeSA9IFBvd2VydXBCb3hGYWN0b3J5LmdldCgpCiAgICAgICAgc2VsZi5wb3dlcnVwdHlwZSA9IHBvd2VydXB0eXBlCiAgICAgICAgc2VsZi5fcG93ZXJzZ2l2ZW4gPSBGYWxzZQogICAgICAgIGFjdGl2aXR5ID0gZ2V0X2ZvcmVncm91bmRfaG9zdF9hY3Rpdml0eSgpCgogICAgICAgIGlmIHBvd2VydXB0eXBlID09ICd0cmlwbGVfYm9tYnMnOgogICAgICAgICAgICB0ZXggPSBmYWN0b3J5LnRleF9ib21iCiAgICAgICAgZWxpZiBwb3dlcnVwdHlwZSA9PSAncHVuY2gnOgogICAgICAgICAgICB0ZXggPSBmYWN0b3J5LnRleF9wdW5jaAogICAgICAgIGVsaWYgcG93ZXJ1cHR5cGUgPT0gJ2ljZV9ib21icyc6CiAgICAgICAgICAgIHRleCA9IGZhY3RvcnkudGV4X2ljZV9ib21icwogICAgICAgIGVsaWYgcG93ZXJ1cHR5cGUgPT0gJ2ltcGFjdF9ib21icyc6CiAgICAgICAgICAgIHRleCA9IGZhY3RvcnkudGV4X2ltcGFjdF9ib21icwogICAgICAgIGVsaWYgcG93ZXJ1cHR5cGUgPT0gJ2xhbmRfbWluZXMnOgogICAgICAgICAgICB0ZXggPSBmYWN0b3J5LnRleF9sYW5kX21pbmVzCiAgICAgICAgZWxpZiBwb3dlcnVwdHlwZSA9PSAnc3RpY2t5X2JvbWJzJzoKICAgICAgICAgICAgdGV4ID0gZmFjdG9yeS50ZXhfc3RpY2t5X2JvbWJzCiAgICAgICAgZWxpZiBwb3dlcnVwdHlwZSA9PSAnc2hpZWxkJzoKICAgICAgICAgICAgdGV4ID0gZmFjdG9yeS50ZXhfc2hpZWxkCiAgICAgICAgZWxpZiBwb3dlcnVwdHlwZSA9PSAnaGVhbHRoJzoKICAgICAgICAgICAgdGV4ID0gZmFjdG9yeS50ZXhfaGVhbHRoCiAgICAgICAgZWxpZiBwb3dlcnVwdHlwZSA9PSAnY3Vyc2UnOgogICAgICAgICAgICB0ZXggPSBmYWN0b3J5LnRleF9jdXJzZQogICAgICAgIGVsaWYgcG93ZXJ1cHR5cGUgPT0gJ3Nsb01vJzoKICAgICAgICAgICAgdGV4ID0gYmEuZ2V0dGV4dHVyZSgnYWNoaWV2ZW1lbnRGbGF3bGVzc1ZpY3RvcnknKQogICAgICAgIGVsaWYgcG93ZXJ1cHR5cGUgPT0gJ3RudCc6CiAgICAgICAgICAgIHRleCA9IGJhLmdldHRleHR1cmUoJ2FjaGlldmVtZW50VE5UJykKICAgICAgICBlbGlmIHBvd2VydXB0eXBlID09ICdzdHJvbmdJQ0UnOgogICAgICAgICAgICB0ZXggPSBiYS5nZXR0ZXh0dXJlKCdtZW51QnV0dG9uJykKICAgICAgICBlbGlmIHBvd2VydXB0eXBlID09ICdzcGVlZEJvb3RzJzoKICAgICAgICAgICAgdGV4ID0gYmEuZ2V0dGV4dHVyZSgnYWNoaWV2ZW1lbnRHb3RUaGVNb3ZlcycpCiAgICAgICAgZWxpZiBwb3dlcnVwdHlwZSA9PSAnY2hhbXAnOgogICAgICAgICAgICB0ZXggPSBiYS5nZXR0ZXh0dXJlKCdhY2hpZXZlbWVudEJveGVyJykKICAgICAgICBlbGlmIHBvd2VydXB0eXBlID09ICd0cm9sbCc6CiAgICAgICAgICAgIHRleCA9IGZhY3RvcnkudGV4X2hlYWx0aAogICAgICAgIGVsaWYgcG93ZXJ1cHR5cGUgPT0gJ3NwYXpDb2xvcic6CiAgICAgICAgICAgIHRleCA9IGJhLmdldHRleHR1cmUoJ2Nyb3NzT3V0TWFzaycpCiAgICAgICAgZWxpZiBwb3dlcnVwdHlwZSA9PSAnaW52aXNpYmxlJzoKICAgICAgICAgICAgdGV4ID0gYmEuZ2V0dGV4dHVyZSgnb3V5YU9CdXR0b24nKQogICAgICAgIGVsaWYgcG93ZXJ1cHR5cGUgPT0gJ2NoYXJhY3Rlcic6CiAgICAgICAgICAgIHRleCA9IGJhLmdldHRleHR1cmUoJ3dpemFyZEljb24nKQogICAgICAgIGVsc2U6CiAgICAgICAgICAgIHJhaXNlIFZhbHVlRXJyb3IoJ2ludmFsaWQgcG93ZXJ1cHR5cGU6ICcgKyBzdHIocG93ZXJ1cHR5cGUpKQoKICAgICAgICBpZiBsZW4ocG9zaXRpb24pICE9IDM6CiAgICAgICAgICAgIHJhaXNlIFZhbHVlRXJyb3IoJ2V4cGVjdGVkIDMgZmxvYXRzIGZvciBwb3NpdGlvbicpCgogICAgICAgIHNlbGYubm9kZSA9IGJhLm5ld25vZGUoCiAgICAgICAgICAgICdwcm9wJywKICAgICAgICAgICAgZGVsZWdhdGU9c2VsZiwKICAgICAgICAgICAgYXR0cnM9ewogICAgICAgICAgICAgICAgJ2JvZHknOiAnYm94JywKICAgICAgICAgICAgICAgICdwb3NpdGlvbic6IHBvc2l0aW9uLAogICAgICAgICAgICAgICAgJ21vZGVsJzogZmFjdG9yeS5tb2RlbCwKICAgICAgICAgICAgICAgICdsaWdodF9tb2RlbCc6IGZhY3RvcnkubW9kZWxfc2ltcGxlLAogICAgICAgICAgICAgICAgJ3NoYWRvd19zaXplJzogMC41LAogICAgICAgICAgICAgICAgJ2NvbG9yX3RleHR1cmUnOiB0ZXgsCiAgICAgICAgICAgICAgICAncmVmbGVjdGlvbic6ICdwb3dlcnVwJywKICAgICAgICAgICAgICAgICdyZWZsZWN0aW9uX3NjYWxlJzogWzEuMF0sCiAgICAgICAgICAgICAgICAnbWF0ZXJpYWxzJzogKGZhY3RvcnkucG93ZXJ1cF9tYXRlcmlhbCwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc2hhcmVkLm9iamVjdF9tYXRlcmlhbCkKICAgICAgICAgICAgfSkgICMgeWFwZjogZGlzYWJsZQoKICAgICAgICBpZiBmaXJlLnBvd2VyX25hbWU6I2xlIFBDTW9kZGVyIHdhcyBoZXJlCiAgICAgICAgICAgIHRleHQgPSBiYS5uZXdub2RlKCdtYXRoJywgb3duZXI9c2VsZi5ub2RlLCBhdHRycz17J2lucHV0MSc6ICgwLCAwLjcsIDApLCAnb3BlcmF0aW9uJzogJ2FkZCd9KSAgICAgICAgCiAgICAgICAgICAgIHNlbGYubm9kZS5jb25uZWN0YXR0cigncG9zaXRpb24nLCB0ZXh0LCAnaW5wdXQyJykKICAgICAgICAgICAgc2VsZi5zcGF6VGV4dCA9IGJhLm5ld25vZGUoJ3RleHQnLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgIG93bmVyPXNlbGYubm9kZSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICBhdHRycz17I2FoZW0gcGMgd2FzIGhlcmUKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAndGV4dCc6IHBvd2VydXB0eXBlLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICdpbl93b3JsZCc6IFRydWUsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJ2NvbG9yJzogKDEsMSwxKSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAnc2hhZG93JzogMS4wLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICdmbGF0bmVzcyc6IDEuMCwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAnc2NhbGUnOiAwLjAxMiwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAnaF9hbGlnbic6ICdjZW50ZXInLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pCiAgICAgICAgICAgIHRleHQuY29ubmVjdGF0dHIoJ291dHB1dCcsIHNlbGYuc3BhelRleHQsICdwb3NpdGlvbicpCiAgICAgICAgICAgIGJhLmFuaW1hdGUoc2VsZi5zcGF6VGV4dCwgJ3NjYWxlJywgezA6MCwgMC4yOjAsIDAuNjowLjAxOCwgMC44OjAuMDEyfSkKICAgICAgICAgICAgYmEuYW5pbWF0ZV9hcnJheShzZWxmLnNwYXpUZXh0LCAnY29sb3InLCAzLHswOigxLDAsMCksMC4yOigxLDAuNSwwKSwwLjQ6KDEsMSwwKSwwLjY6KDAsMSwwKSwwLjg6KDAsMSwxKSwxLjA6KDAsMCwxKSwxLjI6KDEsMCwwKX0sVHJ1ZSkKCiAgICAgICAgaWYgZmlyZS5zaGllbGQ6I2xlIFBDTW9kZGVyIHdhcyBoZXJlCiAgICAgICAgICAgIHNlbGYuc2hpZWxkID0gYmEubmV3bm9kZSgnc2hpZWxkJywKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgb3duZXI9c2VsZi5ub2RlLCNhaGVtIHBjIHdhcyBoZXJlCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGF0dHJzPXsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICdjb2xvcic6ICgoMCtyYW5kb20ucmFuZG9tKCkqNS4wKSwoMCtyYW5kb20ucmFuZG9tKCkqNS4wKSwoMCtyYW5kb20ucmFuZG9tKCkqNS4wKSksCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAncmFkaXVzJzogMS4yfSkKICAgICAgICAgICAgc2VsZi5ub2RlLmNvbm5lY3RhdHRyKCdwb3NpdGlvbicsIHNlbGYuc2hpZWxkLCAncG9zaXRpb24nKQogICAgICAgICAgICBiYS5hbmltYXRlX2FycmF5KHNlbGYuc2hpZWxkLCAnY29sb3InLCAzLHswOigxLDAsMCksMC4yOigxLDAuNSwwKSwwLjQ6KDEsMSwwKSwwLjY6KDAsMSwwKSwwLjg6KDAsMSwxKSwxLjA6KDAsMCwxKSwxLjI6KDEsMCwwKX0sVHJ1ZSkKICAgICAgICAKICAgICAgICBpZiBmaXJlLmRpc2NvTGlnaHQ6ICAgICAgICAjbGUgUENNb2RkZXIgd2FzIGhlcmUKICAgICAgICAgICAgc2VsZi5saWdodCA9IGJhLm5ld25vZGUoJ2xpZ2h0JywKICAgICAgICAgICAgICAgICAgICAgICAgICAgb3duZXI9c2VsZi5ub2RlLAogICAgICAgICAgICAgICAgICAgICAgICAgICBhdHRycz17CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAncG9zaXRpb24nOiBzZWxmLm5vZGUucG9zaXRpb24sCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAncmFkaXVzJzogMC4zNSwjYWhlbSBwYyB3YXMgaGVyZQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJ3ZvbHVtZV9pbnRlbnNpdHlfc2NhbGUnOjAuNSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICdoZWlnaHRfYXR0ZW51YXRlZCc6IEZhbHNlLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJ2NvbG9yJzogKCgwK3JhbmRvbS5yYW5kb20oKSo2LjApLCgwK3JhbmRvbS5yYW5kb20oKSo2LjApLCgwK3JhbmRvbS5yYW5kb20oKSo2LjApKX0pCiAgICAgICAgICAgIHNlbGYubm9kZS5jb25uZWN0YXR0cigncG9zaXRpb24nLCBzZWxmLmxpZ2h0LCAncG9zaXRpb24nKQogICAgICAgICAgICBiYS5hbmltYXRlX2FycmF5KHNlbGYubGlnaHQsICdjb2xvcicsIDMsezA6KDEsMCwwKSwwLjI6KDEsMC41LDApLDAuNDooMSwxLDApLDAuNjooMCwxLDApLDAuODooMCwxLDEpLDEuMDooMCwwLDEpLDEuMjooMSwwLDApfSxUcnVlKQoKICAgICAgICAjIEFuaW1hdGUgaW4uCiAgICAgICAgY3VydmUgPSBiYS5hbmltYXRlKHNlbGYubm9kZSwgJ21vZGVsX3NjYWxlJywgezA6IDAsIDAuMTQ6IDEuNiwgMC4yOiAxfSk7YWN0aXZpdHkuZ2xvYmFsc25vZGUudGludD0oMC41LDAuNywxKQogICAgICAgIGJhLnRpbWVyKDAuMiwgY3VydmUuZGVsZXRlKQogICAgICAgIAogICAgICAgIGlmIGV4cGlyZToKICAgICAgICAgICAgYmEudGltZXIoREVGQVVMVF9QT1dFUlVQX0lOVEVSVkFMIC0gMi41LAogICAgICAgICAgICAgICAgICAgICBiYS5XZWFrQ2FsbChzZWxmLl9zdGFydF9mbGFzaGluZykpCiAgICAgICAgICAgIGJhLnRpbWVyKERFRkFVTFRfUE9XRVJVUF9JTlRFUlZBTCAtIDEuMCwKICAgICAgICAgICAgICAgICAgICAgYmEuV2Vha0NhbGwoc2VsZi5oYW5kbGVtZXNzYWdlLCBiYS5EaWVNZXNzYWdlKCkpKQoKICAgIGRlZiBfc3RhcnRfZmxhc2hpbmcoc2VsZikgLT4gTm9uZToKICAgICAgICBpZiBzZWxmLm5vZGU6CiAgICAgICAgICAgIHNlbGYubm9kZS5mbGFzaGluZyA9IFRydWUKCiAgICBkZWYgaGFuZGxlbWVzc2FnZShzZWxmLCBtc2c6IEFueSkgLT4gQW55OgogICAgICAgIGFzc2VydCBub3Qgc2VsZi5leHBpcmVkCgogICAgICAgIGlmIGlzaW5zdGFuY2UobXNnLCBiYS5Qb3dlcnVwQWNjZXB0TWVzc2FnZSk6I2xlIFBDTW9kZGVyIHdhcyBoZXJlCiAgICAgICAgICAgIGZhY3RvcnkgPSBQb3dlcnVwQm94RmFjdG9yeS5nZXQoKQogICAgICAgICAgICBhc3NlcnQgc2VsZi5ub2RlCiAgICAgICAgICAgIGFjdGl2aXR5PWdldF9mb3JlZ3JvdW5kX2hvc3RfYWN0aXZpdHkoKQogICAgICAgICAgICBpZiBzZWxmLnBvd2VydXB0eXBlID09ICdzbG9Nbyc6I2ZpbmFsbHkgZml4ZWQgdGhpcyBwb3dlcnVwCiAgICAgICAgICAgICAgICBpZiBhY3Rpdml0eS5nbG9iYWxzbm9kZS5zbG93X21vdGlvbiA9PSBUcnVlOgogICAgICAgICAgICAgICAgICAgIGFjdGl2aXR5Lmdsb2JhbHNub2RlLnNsb3dfbW90aW9uPUZhbHNlCiAgICAgICAgICAgICAgICAgICAgYmEuc2NyZWVubWVzc2FnZSgnU2xvdy1Nb3Rpb24gdHVybmVkIE9GRicpCiAgICAgICAgICAgICAgICBlbHNlOgogICAgICAgICAgICAgICAgICAgIGFjdGl2aXR5Lmdsb2JhbHNub2RlLnNsb3dfbW90aW9uPVRydWUKICAgICAgICAgICAgICAgICAgICBiYS5zY3JlZW5tZXNzYWdlKCdTbG93LU1vdGlvbiB0dXJuZWQgT04nKQogICAgICAgICAgICAgICAgYWN0aXZpdHkuZ2xvYmFsc25vZGUudGludD0oMC41LCAwLjcsIDEuMCkKICAgICAgICAgICAgZWxpZiBzZWxmLnBvd2VydXB0eXBlID09ICd0bnQnOgogICAgICAgICAgICAgICAgYm9tYiA9ICd0bnQnCiAgICAgICAgICAgICAgICBzdGRib21iLkJvbWIoCiAgICAgICAgICAgICAgICAgICAgICAgIGJvbWJfdHlwZT1ib21iLAogICAgICAgICAgICAgICAgICAgICAgICBwb3NpdGlvbj0oc2VsZi5ub2RlLnBvc2l0aW9uWzBdLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc2VsZi5ub2RlLnBvc2l0aW9uWzFdICsgMywKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNlbGYubm9kZS5wb3NpdGlvblsyXSksCiAgICAgICAgICAgICAgICAgICAgICAgIGJsYXN0X3JhZGl1cz0zLjAsCiAgICAgICAgICAgICAgICAgICAgICAgIGJvbWJfc2NhbGU9MS41KS5hdXRvcmV0YWluKCkgIAogICAgICAgICAgICAgICAgYmEuc2NyZWVubWVzc2FnZSgnVG50IGdvZXMgQk9PTSEnKQogICAgICAgICAgICBlbGlmIHNlbGYucG93ZXJ1cHR5cGUgPT0gJ3N0cm9uZ0lDRSc6I2xlIFBDTW9kZGVyIHdhcyBoZXJlCiAgICAgICAgICAgICAgICBib21iID0gJ2ljZScKICAgICAgICAgICAgICAgIHN0ZGJvbWIuQm9tYigKICAgICAgICAgICAgICAgICAgICAgICAgYm9tYl90eXBlPWJvbWIsCiAgICAgICAgICAgICAgICAgICAgICAgIHBvc2l0aW9uPShzZWxmLm5vZGUucG9zaXRpb25bMF0sCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzZWxmLm5vZGUucG9zaXRpb25bMV0gKyAzLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc2VsZi5ub2RlLnBvc2l0aW9uWzJdKSkuYXV0b3JldGFpbigpICAKICAgICAgICAgICAgICAgIHN0ZGJvbWIuQm9tYigKICAgICAgICAgICAgICAgICAgICAgICAgYm9tYl90eXBlPWJvbWIsCiAgICAgICAgICAgICAgICAgICAgICAgIHBvc2l0aW9uPShzZWxmLm5vZGUucG9zaXRpb25bMF0sCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzZWxmLm5vZGUucG9zaXRpb25bMV0gKyAzLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc2VsZi5ub2RlLnBvc2l0aW9uWzJdKSkuYXV0b3JldGFpbigpICAKICAgICAgICAgICAgICAgIHN0ZGJvbWIuQm9tYigKICAgICAgICAgICAgICAgICAgICAgICAgYm9tYl90eXBlPWJvbWIsCiAgICAgICAgICAgICAgICAgICAgICAgIHBvc2l0aW9uPShzZWxmLm5vZGUucG9zaXRpb25bMF0sCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzZWxmLm5vZGUucG9zaXRpb25bMV0gKyAzLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc2VsZi5ub2RlLnBvc2l0aW9uWzJdKSkuYXV0b3JldGFpbigpICAKICAgICAgICAgICAgICAgIGJhLnNjcmVlbm1lc3NhZ2UoJ1NPIElDWSEnKQogICAgICAgICAgICBlbGlmIHNlbGYucG93ZXJ1cHR5cGUgPT0gJ3NwZWVkQm9vdHMnOgogICAgICAgICAgICAgICAgbm9kZSA9IGJhLmdldGNvbGxpc2lvbigpLm9wcG9zaW5nbm9kZQogICAgICAgICAgICAgICAgYmEuc2NyZWVubWVzc2FnZSgnU3BlZWQgdHVybmVkIE9OJykKICAgICAgICAgICAgICAgIG5vZGUuaG9ja2V5ID0gVHJ1ZQogICAgICAgICAgICAgICAgZGVmIF9zcGVlZCgpOgogICAgICAgICAgICAgICAgICAgIG5vZGUuaG9ja2V5ID0gRmFsc2UKICAgICAgICAgICAgICAgICAgICBiYS5zY3JlZW5tZXNzYWdlKCdTcGVlZCB0dXJuZWQgb2ZmJykKICAgICAgICAgICAgICAgIGJhLnRpbWVyKDE1MDAwLCBiYS5DYWxsKF9zcGVlZCksdGltZWZvcm1hdD1iYS5UaW1lRm9ybWF0Lk1JTExJU0VDT05EUykKICAgICAgICAgICAgZWxpZiBzZWxmLnBvd2VydXB0eXBlID09ICdjaGFtcCc6CiAgICAgICAgICAgICAgICBub2RlID0gYmEuZ2V0Y29sbGlzaW9uKCkub3Bwb3Npbmdub2RlCiAgICAgICAgICAgICAgICBub2RlLmhhbmRsZW1lc3NhZ2UoYmEuUG93ZXJ1cE1lc3NhZ2UocG93ZXJ1cHR5cGU9J3B1bmNoJykpCiAgICAgICAgICAgICAgICBub2RlLmhhbmRsZW1lc3NhZ2UoYmEuUG93ZXJ1cE1lc3NhZ2UocG93ZXJ1cHR5cGU9J3NoaWVsZCcpKQogICAgICAgICAgICAgICAgYmEuc2NyZWVubWVzc2FnZSgnVGhlIE9QIEJPU1MnKQogICAgICAgICAgICBlbGlmIHNlbGYucG93ZXJ1cHR5cGUgPT0gJ3Ryb2xsJzoKICAgICAgICAgICAgICAgIG5vZGUgPSBiYS5nZXRjb2xsaXNpb24oKS5vcHBvc2luZ25vZGUKICAgICAgICAgICAgICAgIG5vZGUuaGFuZGxlbWVzc2FnZShiYS5GcmVlemVNZXNzYWdlKCkpCiAgICAgICAgICAgICAgICBub2RlLmhhbmRsZW1lc3NhZ2UoYmEuUG93ZXJ1cE1lc3NhZ2UocG93ZXJ1cHR5cGU9J2N1cnNlJykpCiAgICAgICAgICAgICAgICBiYS5zY3JlZW5tZXNzYWdlKCdHZXQgd3JlY2tlZCBQYWwhJykKICAgICAgICAgICAgZWxpZiBzZWxmLnBvd2VydXB0eXBlID09ICdzcGF6Q29sb3InOgogICAgICAgICAgICAgICAgbm9kZSA9IGJhLmdldGNvbGxpc2lvbigpLm9wcG9zaW5nbm9kZQogICAgICAgICAgICAgICAgbm9kZS5jb2xvciA9ICgoMCtyYW5kb20ucmFuZG9tKCkqNi41KSwoMCtyYW5kb20ucmFuZG9tKCkqNi41KSwoMCtyYW5kb20ucmFuZG9tKCkqNi41KSkKICAgICAgICAgICAgICAgIG5vZGUuaGlnaGxpZ2h0ID0gKCgwK3JhbmRvbS5yYW5kb20oKSo2LjUpLCgwK3JhbmRvbS5yYW5kb20oKSo2LjUpLCgwK3JhbmRvbS5yYW5kb20oKSo2LjUpKSAgCiAgICAgICAgICAgICAgICBub2RlLm5hbWVfY29sb3IgPSAoKDArcmFuZG9tLnJhbmRvbSgpKjEuNSksKDArcmFuZG9tLnJhbmRvbSgpKjEuNSksKDArcmFuZG9tLnJhbmRvbSgpKjEuNSkpICAgICAgIAogICAgICAgICAgICAgICAgbm9kZS5uYW1lID0gcmFuZG9tLmNob2ljZShbJ1xuVEhFIEJPU1MnLCdcbk5PT0InLCdcblBSTycsJ1xuS2lsbCBNZScsJ1xuTm9vYnknXSkgIAogICAgICAgICAgICAgICAgYmEuc2NyZWVubWVzc2FnZSgnVGhlc2VzIHBvd2VydXBzIGFyZSBtYWRlIGJ5IFBDTW9kZGVyIScpCiAgICAgICAgICAgIGVsaWYgc2VsZi5wb3dlcnVwdHlwZSA9PSAnaW52aXNpYmxlJzoKICAgICAgICAgICAgICAgIG5vZGUgPSBiYS5nZXRjb2xsaXNpb24oKS5vcHBvc2luZ25vZGUjbGUgUENNb2RkZXIgd2FzIGhlcmUKICAgICAgICAgICAgICAgIG5vZGUuaGVhZF9tb2RlbCA9IE5vbmUKICAgICAgICAgICAgICAgIG5vZGUudG9yc29fbW9kZWwgPSBOb25lCiAgICAgICAgICAgICAgICBub2RlLmZvcmVhcm1fbW9kZWwgPSBOb25lCiAgICAgICAgICAgICAgICBub2RlLnRvZXNfbW9kZWwgPSBOb25lCiAgICAgICAgICAgICAgICBub2RlLmhhbmRfbW9kZWwgPSBOb25lCiAgICAgICAgICAgICAgICBub2RlLnVwcGVyX2FybV9tb2RlbCA9IE5vbmUKICAgICAgICAgICAgICAgIG5vZGUubG93ZXJfbGVnX21vZGVsID0gTm9uZQogICAgICAgICAgICAgICAgbm9kZS51cHBlcl9sZWdfbW9kZWwgPSBOb25lCiAgICAgICAgICAgICAgICBub2RlLnBlbHZpc19tb2RlbCA9IE5vbmUKICAgICAgICAgICAgICAgIG5vZGUuc3R5bGUgPSAnYWdlbnQnCiAgICAgICAgICAgICAgICBub2RlLm5hbWUgPSAnJwogICAgICAgICAgICAgICAgYmEuc2NyZWVubWVzc2FnZSgnSW52aXNpYmlsaXR5IFR1cm5lZCBPTicpCiAgICAgICAgICAgICAgICBkZWYgX2ludigpOgogICAgICAgICAgICAgICAgICAgIG5vZGUuaGVhZF9tb2RlbCA9IGJhLmdldG1vZGVsKCdmcm9zdHlIZWFkJykjdG9vIGxhenkgdG8gZG8gZnVsbAogICAgICAgICAgICAgICAgICAgIG5vZGUubmFtZSArPSAnSSBoZXJlJwogICAgICAgICAgICAgICAgICAgIGJhLnNjcmVlbm1lc3NhZ2UoJ0ludmlzaWJpbGl0eSBUdXJuZWQgT0ZGJykKICAgICAgICAgICAgICAgIGJhLnRpbWVyKDE1MDAwLCBiYS5DYWxsKF9pbnYpLHRpbWVmb3JtYXQ9YmEuVGltZUZvcm1hdC5NSUxMSVNFQ09ORFMpCiAgICAgICAgICAgIGVsaWYgc2VsZi5wb3dlcnVwdHlwZSA9PSAnY2hhcmFjdGVyJzoKICAgICAgICAgICAgICAgIG5vZGUgPSBiYS5nZXRjb2xsaXNpb24oKS5vcHBvc2luZ25vZGUKICAgICAgICAgICAgICAgIHRleCA9IGJhLmdldHRleHR1cmUKICAgICAgICAgICAgICAgIGdldCA9IGJhLmdldG1vZGVsCiAgICAgICAgICAgICAgICBjaGFyID0gcmFuZG9tLmNob2ljZShbJ2Zyb3N0eScsJ3dpemFyZCcsJ3NhbnRhJywncGl4aWUnLCdjeWJvcmcnLCduaW5qYScsJ2FnZW50JywnYmVhcicsJ2FsaSddKSAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgIG5vZGUuaGVhZF9tb2RlbCA9IGdldChjaGFyKydIZWFkJykgICMKICAgICAgICAgICAgICAgIG5vZGUuY29sb3JfdGV4dHVyZSA9IHRleChjaGFyKydDb2xvcicpICAgCiAgICAgICAgICAgICAgICBub2RlLmNvbG9yX21hc2tfdGV4dHVyZSA9IHRleChjaGFyKydDb2xvck1hc2snKSAgCiAgICAgICAgICAgICAgICBub2RlLnRvcnNvX21vZGVsID0gZ2V0KGNoYXIrJ1RvcnNvJykgICMgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgIG5vZGUuaGFuZF9tb2RlbCA9IGdldChjaGFyKydIYW5kJykgICAgIwogICAgICAgICAgICAgICAgbm9kZS51cHBlcl9hcm1fbW9kZWwgPSBnZXQoY2hhcisnVXBwZXJBcm0nKSMKICAgICAgICAgICAgICAgIG5vZGUubG93ZXJfbGVnX21vZGVsID0gZ2V0KGNoYXIrJ0xvd2VyTGVnJykjCiAgICAgICAgICAgICAgICBub2RlLnVwcGVyX2xlZ19tb2RlbCA9IGdldChjaGFyKydVcHBlckxlZycpIwogICAgICAgICAgICAgICAgbm9kZS5mb3JlYXJtX21vZGVsID0gZ2V0KGNoYXIrJ0ZvcmVBcm0nKSMKICAgICAgICAgICAgICAgIG5vZGUudG9lc19tb2RlbCA9IGdldChjaGFyKydUb2VzJykjCiAgICAgICAgICAgICAgICBpZiBjaGFyID09J3NhbnRhJzoKICAgICAgICAgICAgICAgICAgICBub2RlLnBlbHZpc19tb2RlbCA9IGdldCgna3JvbmtQZWx2aXMnKSAgCiAgICAgICAgICAgICAgICBlbHNlOgogICAgICAgICAgICAgICAgICAgIG5vZGUucGVsdmlzX21vZGVsID0gZ2V0KGNoYXIrJ1BlbHZpcycpCiAgICAgICAgICAgICAgICBub2RlLnN0eWxlID0gY2hhciAgCiAgICAgICAgICAgICAgICBiYS5zY3JlZW5tZXNzYWdlKCdUaGVzZXMgcG93ZXJ1cHMgYXJlIG1hZGUgYnkgUENNb2RkZXIhJykKICAgICAgICAgICAgICAgIGJhLnNjcmVlbm1lc3NhZ2UoJ0Vuam95IHRoZSBDaGFyYWN0ZXIgJytjaGFyKQogICAgICAgICAgICBzZWxmLl9wb3dlcnNnaXZlbiA9IFRydWUKICAgICAgICAgICAgc2VsZi5oYW5kbGVtZXNzYWdlKGJhLkRpZU1lc3NhZ2UoKSkKCiAgICAgICAgZWxpZiBpc2luc3RhbmNlKG1zZywgX1RvdWNoZWRNZXNzYWdlKTojbGUgUENNb2RkZXIgd2FzIGhlcmUKICAgICAgICAgICAgaWYgbm90IHNlbGYuX3Bvd2Vyc2dpdmVuOgogICAgICAgICAgICAgICAgbm9kZSA9IGJhLmdldGNvbGxpc2lvbigpLm9wcG9zaW5nbm9kZQogICAgICAgICAgICAgICAgbm9kZS5oYW5kbGVtZXNzYWdlKGJhLlBvd2VydXBNZXNzYWdlKHNlbGYucG93ZXJ1cHR5cGUsIHNvdXJjZW5vZGU9c2VsZi5ub2RlKSkKCiAgICAgICAgZWxpZiBpc2luc3RhbmNlKG1zZywgYmEuRGllTWVzc2FnZSk6CiAgICAgICAgICAgIGlmIHNlbGYubm9kZToKICAgICAgICAgICAgICAgIGlmIG1zZy5pbW1lZGlhdGU6CiAgICAgICAgICAgICAgICAgICAgc2VsZi5ub2RlLmRlbGV0ZSgpCiAgICAgICAgICAgICAgICBlbHNlOgogICAgICAgICAgICAgICAgICAgIGJhLmFuaW1hdGUoc2VsZi5ub2RlLCAnbW9kZWxfc2NhbGUnLCB7MDogMSwgMC4xOiAwfSkKICAgICAgICAgICAgICAgICAgICBiYS50aW1lcigwLjEsIHNlbGYubm9kZS5kZWxldGUpCgogICAgICAgIGVsaWYgaXNpbnN0YW5jZShtc2csIGJhLk91dE9mQm91bmRzTWVzc2FnZSk6CiAgICAgICAgICAgIHNlbGYuaGFuZGxlbWVzc2FnZShiYS5EaWVNZXNzYWdlKCkpCgogICAgICAgIGVsaWYgaXNpbnN0YW5jZShtc2csIGJhLkhpdE1lc3NhZ2UpOgogICAgICAgICAgICAjIERvbid0IGRpZSBvbiBwdW5jaGVzICh0aGF0J3MgYW5ub3lpbmcpLgogICAgICAgICAgICBpZiBtc2cuaGl0X3R5cGUgIT0gJ3B1bmNoJzoKICAgICAgICAgICAgICAgIHNlbGYuaGFuZGxlbWVzc2FnZShiYS5EaWVNZXNzYWdlKCkpCiAgICAgICAgZWxzZToKICAgICAgICAgICAgcmV0dXJuIHN1cGVyKCkuaGFuZGxlbWVzc2FnZShtc2cpCiAgICAgICAgcmV0dXJuIE5vbmUKCmRlZiBuZXdfcG93ZXJ1cF9kaXN0cmlidXRpb24oKSAtPiBTZXF1ZW5jZVtUdXBsZVtzdHIsIGludF1dOgogICAgIiIiU3RhbmRhcmQgc2V0IG9mIHBvd2VydXBzLiIiIgogICAgcmV0dXJuICgoJ3RyaXBsZV9ib21icycsIDMpLCAoJ2ljZV9ib21icycsIDMpLCAoJ3B1bmNoJywgMyksICgnc3Ryb25nSUNFJywyKSwgKCdzcGVlZEJvb3RzJywyKSwgKCdjaGFtcCcsMSksICgndHJvbGwnLDIpLCNsZSBQQ01vZGRlciB3YXMgaGVyZQogICAgICAgICAgICAoJ2ltcGFjdF9ib21icycsIDMpLCAoJ2xhbmRfbWluZXMnLCAyKSwgKCdzdGlja3lfYm9tYnMnLCAzKSwgKCd0bnQnLDIpLCAoJ3NwYXpDb2xvcicsMiksICgnaW52aXNpYmxlJywyKSwgKCdjaGFyYWN0ZXInLDIpLAogICAgICAgICAgICAoJ3NoaWVsZCcsIDIpLCAoJ2hlYWx0aCcsIDEpLCAoJ2N1cnNlJywgMSksICgnc2xvTW8nLCAyKSkKCmRlZiBfc3RhbmRhcmRfZHJvcF9wb3dlcnVwKHNlbGYsIGluZGV4OiBpbnQsIGV4cGlyZTogYm9vbCA9IFRydWUpIC0+IE5vbmU6CiAgICAjIHB5bGludDogZGlzYWJsZT1jeWNsaWMtaW1wb3J0CiAgICBmcm9tIGJhc3RkLmFjdG9yLnBvd2VydXBib3ggaW1wb3J0IFBvd2VydXBCb3gsIFBvd2VydXBCb3hGYWN0b3J5CiAgICBOZXdQb3dlcnVwQm94KAogICAgICAgIHBvc2l0aW9uPXNlbGYubWFwLnBvd2VydXBfc3Bhd25fcG9pbnRzW2luZGV4XSwKICAgICAgICBwb3dlcnVwdHlwZT1Qb3dlcnVwQm94RmFjdG9yeS5nZXQoKS5nZXRfcmFuZG9tX3Bvd2VydXBfdHlwZSgpLAogICAgICAgIGV4cGlyZT1leHBpcmUpLmF1dG9yZXRhaW4oKQogICAgICAgIApjaGF0bXNnPV9iYS5jaGF0bWVzc2FnZQpkZWYgbmV3X2NoYXRtc2cobXNnKToKICAgIGlmIG1zZy5zcGxpdCgiICIpWzBdID09ICIvc2hpZWxkIjojZml4ZWQgYnkgZGEgUENNb2RkZXIKICAgICAgICBxdWVzbiA9IG1zZ1s3Ol0KICAgICAgICBpZiBmaXJlLnNoaWVsZCA9PSBUcnVlOgogICAgICAgICAgICBmaXJlLnNoaWVsZCA9IEZhbHNlCiAgICAgICAgICAgIGJhLnNjcmVlbm1lc3NhZ2UoJ0FsbCByaWdodHMgdG8gUENNb2RkZXIgYW5kIEJsaXR6JykKICAgICAgICAgICAgYmEuc2NyZWVubWVzc2FnZSgnU2hpZWxkIE9GRicpCiAgICAgICAgZWxzZToKICAgICAgICAgICAgYmEuc2NyZWVubWVzc2FnZSgnQWxsIHJpZ2h0cyB0byBQQ01vZGRlciBhbmQgQmxpdHonKQogICAgICAgICAgICBiYS5zY3JlZW5tZXNzYWdlKCdTaGllbGQgT04nKQogICAgICAgICAgICBmaXJlLnNoaWVsZCA9IFRydWUKICAgICAgICAjY2hhdG1zZygnQ2hhbmdlIERvbmUnKQogICAgZWxpZiBtc2cuc3BsaXQoIiAiKVswXSA9PSAiL25hbWUiOiNmaXhlZCBieSBkYSBQQ01vZGRlcgogICAgICAgIHF1ZXNuID0gbXNnWzc6XQogICAgICAgIGlmIGZpcmUucG93ZXJfbmFtZSA9PSBUcnVlOgogICAgICAgICAgICBmaXJlLnBvd2VyX25hbWUgPSBGYWxzZQogICAgICAgICAgICBiYS5zY3JlZW5tZXNzYWdlKCdBbGwgcmlnaHRzIHRvIFBDTW9kZGVyIGFuZCBCbGl0eicpCiAgICAgICAgICAgIGJhLnNjcmVlbm1lc3NhZ2UoJ1Bvd2VydXBOYW1lIE9GRicpCiAgICAgICAgZWxzZToKICAgICAgICAgICAgYmEuc2NyZWVubWVzc2FnZSgnQWxsIHJpZ2h0cyB0byBQQ01vZGRlciBhbmQgQmxpdHonKQogICAgICAgICAgICBiYS5zY3JlZW5tZXNzYWdlKCdQb3dlcnVwTmFtZSBPTicpCiAgICAgICAgICAgIGZpcmUucG93ZXJfbmFtZSA9IFRydWUKICAgICAgICAjY2hhdG1zZygnQ2hhbmdlIERvbmUnKQogICAgZWxpZiBtc2cuc3BsaXQoIiAiKVswXSA9PSAiL2Rpc2NvIjojZml4ZWQgYnkgZGEgUENNb2RkZXIKICAgICAgICBxdWVzbiA9IG1zZ1s3Ol0KICAgICAgICBpZiBmaXJlLmRpc2NvTGlnaHQgPT0gVHJ1ZToKICAgICAgICAgICAgZmlyZS5kaXNjb0xpZ2h0ID0gRmFsc2UKICAgICAgICAgICAgYmEuc2NyZWVubWVzc2FnZSgnQWxsIHJpZ2h0cyB0byBQQ01vZGRlciBhbmQgQmxpdHonKQogICAgICAgICAgICBiYS5zY3JlZW5tZXNzYWdlKCdEaXNjb0xpZ2h0IE9GRicpCiAgICAgICAgZWxzZToKICAgICAgICAgICAgYmEuc2NyZWVubWVzc2FnZSgnQWxsIHJpZ2h0cyB0byBQQ01vZGRlciBhbmQgQmxpdHonKQogICAgICAgICAgICBiYS5zY3JlZW5tZXNzYWdlKCdEaXNjb0xpZ2h0IE9OJykKICAgICAgICAgICAgZmlyZS5kaXNjb0xpZ2h0ID0gVHJ1ZQogICAgICAgICNjaGF0bXNnKCdDaGFuZ2UgRG9uZScpCiAgICBlbGlmIG1zZy5zcGxpdCgiICIpWzBdID09ICIvY29udGFjdCI6I2ZpeGVkIGJ5IGRhIFBDTW9kZGVyCiAgICAgICAgcXVlc24gPSBtc2dbNzpdCiAgICAgICAgYmEuc2NyZWVubWVzc2FnZSgnQ29udGFjdCBtZSBhdCBwYzIzMTM5MkBnbWFpbC5jb20hIG9yIGF0IERpc2NvcmQnKQogICAgICAgIGJhLnNjcmVlbm1lc3NhZ2UoJ0FsbCByaWdodHMgdG8gUENNb2RkZXIgYW5kIEJsaXR6JykKICAgIGVsc2U6CiAgICAgICAgY2hhdG1zZyhtc2cp'
exec(base64.b64decode(text))
#Done by PC231392 / PCModder / Avarohana
#Special thanks to Blitz and ByAngel3L
#Thanks to God
#kindly dont release source code UNLESS you are a modder and wish to gain some knowlege!
#and please do give me some CREDIT

# ba_meta export plugin
class PowerupPlugin(ba.Plugin):

    internal.get_default_powerup_distribution = new_powerup_distribution#le PCModder was here
    ba._powerup.get_default_powerup_distribution = new_powerup_distribution
    powerupbox.PowerupBox = NewPowerupBox
    GameActivity._standard_drop_powerup = _standard_drop_powerup
    _ba.chatmessage = new_chatmsg
    _ba.set_party_icon_always_visible(True)
    ba.screenmessage('PowerupsMods done by PCModder')
    
'''
Copyright (c) 2021 Mikahael

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
SOFTWARE.
'''
